From 048559924a7380a12ac013c0cd86bb1db66bc5d8 Mon Sep 17 00:00:00 2001
From: Dawit Mezemir <dawitmezemir@gmial.com>
Date: Thu, 14 Jan 2021 00:20:19 +0100
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-39.pyc | Bin 0 -> 1153 bytes
 client3.py                         |   4 ++--
 client_test.py                     |  25 ++++++++++++++++++++++++-
 3 files changed, 26 insertions(+), 3 deletions(-)
 create mode 100644 __pycache__/client3.cpython-39.pyc

diff --git a/__pycache__/client3.cpython-39.pyc b/__pycache__/client3.cpython-39.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..3667712e0f60a02a39a004e8b6ca24c786fcac3f
GIT binary patch
literal 1153
zcmYjR&2Jk;6rb6hU9S^64b7+NWvEnvC0qyfQbmOplJX^p(pFSr1X@iz&+#_vU1xTT
zYU4;qhX2Dk@*nV5aNsysPQ7#D0&m7i)ET|cd4Bue?>$*In=1s*Z<GJhKk9`1?Toh%
z`p6Tc>Mvx9D4G*Ny$nR)Whg=~nP4gqkqSkun2LTSqNZY1LzzHbC1-*D6INgq;yInu
zL-OM<q5<Ke3G~(4;ub`Ubzlp2NiOLnUA*I@xSbKP0k<)BPi#UBHs|yQCbq=3*b%$1
z3mdTYh(Jr#VGFil2X^~xo6IRC=dYm!8&1R56-Z!1t+ojAMvKgYtC(*TeL>pIH`o_B
zn!YzMX0+e!=4DUjgR(OF5BDDKb<fA3Cyz7r@y{38Ka`Lj(#?rbV@L-`)e~eh#HU3r
zsBv1*A}Yl1(Tl*_?8Xjf!7SV%D!M~1*o-=B#`+AaiKqMgSeI(t11|HNmwj#qzzYBc
zivJ|@F;v`?{1gh%(qIr*(#TPn6^7fWGG*_~)=W7{Pcmhrk<NOsv}JYnCcqNg)JFZh
zl%^fo=zLrn(9Uh^_=9vAU&q*`s$F-#6TOP!-!Hp^atK{nKrScUuaCbi^{Fg6FEee%
zGVgp<V5*`TWFz->&@s>(bPT5IeAF3D9&~$o28DTWe>Aa;Q!s~E_OUM;b60)`!-THm
zZBX4rU(c0weVp#dBfW{rj4Fy7)lk6;#Ck^W5JWGW-sN9_;fPFDI_!KuspPUySNaLp
zZh}X?rFI}{S0UHRiGNtK1_s&$YkltWwb80#WP~M@QN8A0({w1aB2B07KXX_rey`%v
z@DC8p{d?7i9Q*gue+ISoH1XLm&W4|Uc3{K9r=Pdq6>DRi=h?}94Y+ZY5%JQt%w$6l
z>{V43BG%YPITX>e@18#Y-qItF(@i0T9738}mf;+1gt4b!X=)=JwyH$!I&%#(mm?@_
z+%NS|8p||DWn;e!m5qI+l}@ldzZu&7186rOzYTt=3iB3BZaMT4t4Bjz-5fsILRWPc
ZSwj5{S;&H<jyGJVJYwiwN7}}T{||9IBi;Z2

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index ce97ae3..32e733e 100644
--- a/client3.py
+++ b/client3.py
@@ -36,7 +36,7 @@ def getDataPoint(quote):
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
 	price = (bid_price + ask_price)/2 
-	return stock, bid_price, ask_price, price
+	return stock, bid_price, ask_price, price  
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
@@ -63,5 +63,5 @@ if __name__ == "__main__":
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 	
 			
-
+		print(prices) 
 		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))   
diff --git a/client_test.py b/client_test.py
index af2bf26..e3e93b9 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint,getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +17,30 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio(self):
+    prices = [{'ABC': 145.665, 'DEF': 145.20499999999998},{'ABC': 145.665, 'DEF': 145.20499999999998},{'ABC': 130.635, 'DEF': 135.36}] 
+    for price in prices:
+      self.assertEqual(getRatio(price['ABC'], price['DEF']) ,(price['ABC']/price['DEF'])) 
+  
+  def test_getRatio_pricebEqualZero(self):
+    prices = [{'ABC': 145.665, 'DEF': 0},{'ABC': 145.665, 'DEF': 0},{'ABC': 130.635, 'DEF': 0}] 
+    for price in prices:
+        self.assertEqual(getRatio(price['ABC'], price['DEF']) , None) 
+  
+  def test_getRatio_priceaEqualZero(self):
+    prices = [{'ABC': 0, 'DEF': 145.20499999999998},{'ABC': 0, 'DEF': 145.20499999999998},{'ABC': 0, 'DEF': 135.36}]
+    for price in prices:
+      self.assertEqual(getRatio(price['ABC'], price['DEF']) ,(price['ABC']/price['DEF'])) 
+     
+
+
+
 
 
 
-- 
2.25.1

